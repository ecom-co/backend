{
  "name": "ecom-backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
"scripts": {
        "build": "nest build",
        "build:config": "ts-node -r tsconfig-paths/register scripts/generate-query-configs.ts",
        "check-types": "tsc --noEmit --skipLibCheck",
        "commitlint": "commitlint --edit",
        "db:migrate": "sequelize-cli db:migrate",
        "db:migrate:undo": "sequelize-cli db:migrate:undo",
        "db:migrate:undo:all": "sequelize-cli db:migrate:undo:all",
        "db:seed:all": "sequelize-cli db:seed:all",
        "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
        "generate:blueprint": "ts-node -r tsconfig-paths/register scripts/generate-blueprint.ts",
        "generate:module": "ts-node -r tsconfig-paths/register scripts/generate-module.ts",
        "lint": "eslint \"{src,apps,libs,test}/**/*.ts\"",
        "lint:fix": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
        "lint:fix:all": "eslint --fix \"{src,apps,libs,test}/**/*.ts\" && prettier --write \"{src,apps,libs,test}/**/*.ts\"",
        "migration:create": "sequelize-cli migration:generate",
        "pre-commit": "lint-staged --config .lintstagedrc.json",
        "pre-push": "npm run test && npm run build",
        "prepare": "[ -z \"$SKIP_HUSKY\" ] && husky || echo \"Skipping husky\"",
        "start": "nest start",
        "start:debug": "nest start --debug --watch",
        "start:dev": "nest start --watch",
        "start:prod": "node -r tsconfig-paths/register dist/main",
        "test": "jest",
        "test:cov": "jest --coverage",
        "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "test:watch": "jest --watch"
  },
  "dependencies": {
    "@nestjs/common": "^11.0.1",
    "@nestjs/core": "^11.0.1",
    "@nestjs/platform-express": "^11.0.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@faker-js/faker": "^9.9.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/bluebird": "^3.5.42",
    "@types/crypto-js": "^4.2.2",
    "@types/ejs": "^3.1.5",
    "@types/express": "^5.0.0",
    "@types/glob": "^8.1.0",
    "@types/inquirer": "^9.0.8",
    "@types/jest": "^29.5.14",
    "@types/lodash": "^4.17.18",
    "@types/node": "^22.10.7",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/pg": "^8.15.4",
    "@types/supertest": "^6.0.2",
    "chalk": "^5.4.1",
    "change-case": "^5.4.4",
    "dotenv": "^17.0.0",
    "ejs": "^3.1.10",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-import-resolver-typescript": "^4.3.4",
    "eslint-plugin-import-x": "^4.11.1",
    "eslint-plugin-jest": "^28.11.0",
    "eslint-plugin-jsdoc": "^50.6.11",
    "eslint-plugin-lodash": "^8.0.0",
    "eslint-plugin-prettier": "^5.2.2",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-sonarjs": "^3.0.2",
    "eslint-plugin-sort-class-members": "^1.21.0",
    "eslint-plugin-sort-exports": "^0.9.1",
    "eslint-plugin-unused-imports": "^4.1.4",
    "glob": "^10.4.5",
    "globals": "^16.0.0",
    "husky": "^9.1.7",
    "inquirer": "^12.6.3",
    "jest": "^29.7.0",
    "lint-staged": "^16.1.2",
    "lodash": "^4.17.21",
    "pluralize": "^8.0.0",
    "prettier": "^3.3.3",
    "sequelize-cli": "^6.6.3",
    "slugify": "^1.6.6",
    "sort-package-json": "^3.3.1",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.3",
    "ts-loader": "^9.5.2",
    "ts-morph": "^26.0.0",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}